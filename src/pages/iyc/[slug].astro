---
import Layout from '../../layouts/Layout.astro';
import { supabase } from '../../lib/supabase';
import IYCEmployees from '../../components/iyc/IYCEmployees.astro';
import IYCLocation from '../../components/iyc/IYCLocation.astro';

// Keep SSR enabled but pre-generate the 1,000 most recent posts
export const prerender = false;

const { slug } = Astro.params;

// Handle missing slugs
if (!slug) {
  console.error('No slug provided');
  return Astro.redirect('/404');
}

// Fetch post dynamically at runtime using the view
const { data: post, error: postError } = await supabase
  .from('iyc_with_relations')
  .select('*')
  .eq('slug', slug)
  .eq('published', true)
  .single();

if (postError || !post) {
  console.error(`Post not found: ${slug}`, postError);
  return Astro.redirect('/404');
}

// Fetch employees for this specific IYC post through the relation table
const { data: employees } = await supabase
  .from('iyc_employees_relation')
  .select(`
    employee:quirk_employees(
      id,
      employee_first_name,
      employee_lastname,
      employee_job_title,
      employee_photo
    )
  `)
  .eq('iyc_id', post.id);

// Format publish date
const publishDate = new Date(post.published_at).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Format employees data for the component
const formattedEmployees = employees?.map(e => e.employee).filter(Boolean) || [];
---

<Layout 
  title={post.title}
  description={post.enhanced_content || post.content}
  image={post.featured_image_url}
>
  <article class="min-h-screen bg-gray-50">
    <!-- Hero Section with Location Featured Image -->
    <div class="relative">
      <div class="absolute inset-0">
        <img 
          src={post.quirk_location_featured_image}
          alt={post.quirk_location_title}
          class="w-full h-full object-cover"
        />
        <div class="absolute inset-0 bg-gradient-to-r from-primary/90 to-primary/70"></div>
      </div>
      <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24">
        <div class="flex flex-col sm:flex-row items-start gap-8">
          {post.quirk_location_logo && (
            <div class="flex-shrink-0">
              <img 
                src={post.quirk_location_logo}
                alt={`${post.quirk_location_title} logo`}
                class="h-24 sm:h-32 bg-white rounded-lg p-2"
              />
            </div>
          )}
          <div>
            <div class="flex flex-wrap gap-3 mb-6">
              {post.quirk_location_title && (
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-white/20 text-white">
                  {post.quirk_location_title}
                </span>
              )}
              {post.location_name && (
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-secondary/80 text-white">
                  <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                  {post.location_name}
                </span>
              )}
              <time class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-white/20 text-white">
                {publishDate}
              </time>
            </div>

            <h1 class="text-4xl font-extrabold tracking-tight text-white sm:text-5xl lg:text-6xl mb-6">
              {post.title}
            </h1>
          </div>
        </div>
      </div>
    </div>

    <!-- Main Content -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
        <!-- Left Column - Featured Image -->
        <div class="h-full">
          <img 
            src={post.featured_image_url}
            alt={post.title}
            class="w-full h-full object-cover rounded-lg shadow-xl"
          />
        </div>

        <!-- Right Column - Location and Team -->
        <div class="space-y-8">
          {post.quirk_location_id && (
            <IYCLocation locationData={{
              id: post.quirk_location_id,
              title: post.quirk_location_title,
              slug: post.quirk_location_slug,
              physical_address: post.quirk_location_address,
              city: post.quirk_location_city,
              state: post.quirk_location_state,
              zip_code: post.quirk_location_zip,
              website: post.quirk_location_website,
              gmb: post.quirk_location_gmb,
              location_logo: post.quirk_location_logo
            }} />
          )}

          {formattedEmployees.length > 0 && (
            <IYCEmployees employees={formattedEmployees} />
          )}
        </div>
      </div>

      {/* Divider */}
      <hr class="my-12 border-gray-200" />

      {/* Enhanced Content Section */}
      {post.enhanced_content && (
        <div class="prose prose-lg max-w-none mx-auto bg-white rounded-lg shadow-lg p-8">
          <div set:html={post.enhanced_content} />
        </div>
      )}
    </div>
  </article>
</Layout>

<style>
  /* Smooth transitions */
  .prose {
    transition: all 0.3s ease;
  }

  /* Mobile optimizations */
  @media (max-width: 640px) {
    .prose {
      font-size: 1.125rem;
    }
  }

  /* Image loading */
  img {
    transition: opacity 0.3s ease;
  }

  img[loading] {
    opacity: 0;
  }

  img.loaded {
    opacity: 1;
  }
</style>

<script>
  // Handle image loading
  document.addEventListener('DOMContentLoaded', () => {
    const images = document.querySelectorAll('img[loading="lazy"]');
    images.forEach(img => {
      img.addEventListener('load', () => {
        img.classList.add('loaded');
      });
    });
  });
</script>