---
interface Props {
  jobs: any[];
  departments: string[];
  cities: string[];
  locations: { id: string; title: string }[];
  initialFilters: {
    department?: string;
    city?: string;
    locationId?: string;
  };
}

const { jobs, departments, cities, locations, initialFilters } = Astro.props;

// Default job description
const defaultDescription = "Join our team at Quirk Auto Group! We offer competitive benefits, a great work environment, and opportunities for growth.";
---

<div class="space-y-6" id="jobs-container">
  {jobs && jobs.length > 0 ? (
    jobs.map((job) => (
      <div class="bg-white rounded-lg shadow-md overflow-hidden job-card">
        <div class="p-6">
          <div class="flex items-start gap-6">
            {job.quirk_location?.location_logo && (
              <div class="hidden md:block flex-shrink-0 w-24">
                <a href={`/careers/${job.id}`} class="block">
                  <img 
                    src={job.quirk_location.location_logo} 
                    alt={`${job.quirk_location.title} logo`}
                    class="w-full h-auto object-contain border border-black"
                  />
                </a>
              </div>
            )}
            <div class="flex-1">
              <h3 class="text-xl font-bold text-primary mb-2">
                <a 
                  href={`/careers/${job.id}`}
                  class="hover:text-secondary transition-colors"
                >
                  {job.title}
                </a>
              </h3>
              <div class="flex flex-wrap items-center gap-6 text-gray-600 mb-4">
                {job.department && <span>{job.department}</span>}
                {job.quirk_location && (
                  <a 
                    href={`/locations/${job.quirk_location.slug}`}
                    class="text-secondary hover:text-primary transition-colors"
                  >
                    {job.quirk_location.title}
                  </a>
                )}
              </div>
              <p class="text-gray-600 mb-4 line-clamp-2">
                {job.description || defaultDescription}
              </p>
              <div class="flex justify-between items-center mt-4">
                <a
                  href={`/careers/${job.id}`}
                  class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark transition-colors group"
                >
                  View Details
                  <svg 
                    class="ml-2 w-4 h-4 transform transition-transform duration-300 group-hover:translate-x-1" 
                    fill="none" 
                    stroke="currentColor" 
                    viewBox="0 0 24 24"
                  >
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                  </svg>
                </a>
                <a
                  href={job.application_url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-secondary hover:bg-secondary-light transition-colors"
                >
                  Apply Now
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    ))
  ) : (
    <div class="bg-white rounded-lg shadow-md p-8 text-center">
      <h3 class="mt-4 text-lg font-medium text-gray-900">No jobs found</h3>
      <p class="mt-2 text-gray-600">
        {Object.keys(initialFilters).some(key => initialFilters[key]) 
          ? 'Try adjusting your filters or clearing them to see more results.'
          : 'Check back soon for new opportunities.'}
      </p>
    </div>
  )}
</div>

<style>
  /* Truncate Job Descriptions */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>