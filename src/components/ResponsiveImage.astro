---
import { getOptimizedImageUrl, getSrcSet } from '../lib/images';

interface Props {
  src: string;
  alt: string;
  class?: string;
  sizes?: string;
  loading?: 'lazy' | 'eager';
  width?: number;
  height?: number;
}

const { 
  src, 
  alt, 
  class: className = '',
  sizes = '(min-width: 1280px) 1200px, (min-width: 768px) 768px, 100vw',
  loading = 'lazy',
  width,
  height
} = Astro.props;

// Define breakpoint widths
const breakpoints = [480, 768, 1024, 1280, 1920];

// Generate srcset for each format
const webpSrcset = getSrcSet(src, breakpoints, { format: 'webp' });
const avifSrcset = getSrcSet(src, breakpoints, { format: 'avif' });

// Default image URL with optimization
const defaultUrl = getOptimizedImageUrl(src, 'default', {
  width,
  height,
  format: 'webp',
  quality: 85
});
---

<picture>
  <!-- AVIF format -->
  <source
    type="image/avif"
    srcset={avifSrcset}
    {sizes}
  />
  
  <!-- WebP format -->
  <source
    type="image/webp"
    srcset={webpSrcset}
    {sizes}
  />
  
  <!-- Fallback image -->
  <img
    src={defaultUrl}
    {alt}
    {width}
    {height}
    class={`w-full h-auto object-cover ${className}`}
    {loading}
    decoding="async"
  />
</picture>

<style>
  img {
    max-width: 100%;
    height: auto;
    content-visibility: auto;
  }
</style>